{"ast":null,"code":"var _jsxFileName = \"/Users/yuqi.guo/Desktop/quill/frontend/src/components/Chart.js\";\nimport React from 'react';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  chart\n}) => {\n  const {\n    chartType,\n    xAxisField,\n    yAxisField,\n    data\n  } = chart;\n\n  // Convert numerical values from strings to numbers\n  const formattedData = data.map(item => ({\n    ...item,\n    [yAxisField]: parseFloat(item[yAxisField])\n  }));\n  const renderLineChart = /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 600,\n    height: 300,\n    data: formattedData,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: xAxisField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: yAxisField,\n      stroke: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  const renderBarChart = /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 600,\n    height: 300,\n    data: formattedData,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: xAxisField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: yAxisField,\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: chartType === 'line' ? renderLineChart : renderBarChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ChartComponent","chart","chartType","xAxisField","yAxisField","data","formattedData","map","item","parseFloat","renderLineChart","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","renderBarChart","fill","_c","$RefreshReg$"],"sources":["/Users/yuqi.guo/Desktop/quill/frontend/src/components/Chart.js"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst ChartComponent = ({ chart }) => {\n  const { chartType, xAxisField, yAxisField, data } = chart;\n\n  // Convert numerical values from strings to numbers\n  const formattedData = data.map(item => ({\n    ...item,\n    [yAxisField]: parseFloat(item[yAxisField])\n  }));\n\n  const renderLineChart = (\n    <LineChart width={600} height={300} data={formattedData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey={xAxisField} />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line type=\"monotone\" dataKey={yAxisField} stroke=\"#8884d8\" />\n    </LineChart>\n  );\n\n  const renderBarChart = (\n    <BarChart width={600} height={300} data={formattedData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey={xAxisField} />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey={yAxisField} fill=\"#8884d8\" />\n    </BarChart>\n  );\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      {chartType === 'line' ? renderLineChart : renderBarChart}\n    </ResponsiveContainer>\n  );\n};\n\nexport default ChartComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}